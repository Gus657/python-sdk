name: Python CI

on:
  push:
    branches: [ master ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-versions: [2.6, 2.7, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-versions }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-versions }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8 pytest mock
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test
      run: python py.test configcatclienttests
        
  coverage:
    needs: test
    runs-on: ubuntu-latest
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install pytest mock pytest-cov codecov
        pip install -r requirements.txt

    - name: Execute coverage
      run: python py.test --cov=configcatclient configcatclienttests

    - name: Upload coverage report
      run: codecov

  publish:
    needs: coverage
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
